{"version":3,"sources":["components/header/Header.js","contexts/todos/TodosContext.js","components/todo/TodoItem.js","components/todo/Todo.js","components/popup/Popup.js","App.js","index.js"],"names":["Header","props","logoText","className","TodosContext","React","createContext","TodoItem","todo","setTodos","useContext","TodoContext","htmlFor","id","type","text","onClick","todos","filter","t","date","Todo","setPopupState","length","map","isOpen","popupName","Popup","blockBackground","useState","todoText","todoDate","successValidFields","setSuccessValidFields","todoTextError","todoDateError","inputErrorsState","setInputErrorsState","requiredInputsCount","successInputsCount","countsInputsInfo","setCountsInputsInfo","entryButton","entryButtonState","setEntryButtonState","handleChange","e","requiredCount","target","dataset","inputscount","prev","Number","setValidFields","data","fieldName","value","name","validate","closePopup","useEffect","succesCount","Object","values","forEach","el","Boolean","isValid","style","zIndex","backgroundColor","backgroundHandler","data-inputscount","placeholder","onChange","disabled","App","JSON","parse","localStorage","getItem","popupState","setItem","stringify","Provider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sQAiBeA,G,YAbA,SAACC,GAAW,IACjBC,EAAaD,EAAbC,SACR,OACE,iCACE,oBAAIC,UAAU,oBAAd,SAAmCD,QCJ1BE,G,KAFMC,IAAMC,iBC8BZC,EAzBE,SAACN,GAAW,IACnBO,EAASP,EAATO,KACFC,EAAWJ,IAAMK,WAAWC,GAKlC,OACE,wBAAOR,UAAU,kBAAkBS,QAASJ,EAAKK,GAAjD,UACE,uBAAOC,KAAK,WAAWD,GAAIL,EAAKK,GAAIV,UAAU,wBAC9C,sBAAMA,UAAU,yBAAhB,SAA0CK,EAAKO,OAC/C,mBAAGZ,UAAU,wBAAwBa,QARf,WACxBP,GAAS,SAACQ,GAAD,OAAWA,EAAMC,QAAO,SAACC,GAAD,OAAOA,EAAEJ,OAASP,EAAKO,YAOtD,mGACA,sBAAMZ,UAAU,8BAAhB,SAA+CK,EAAKY,WCY3CC,EA1BF,SAACpB,GAAW,IACfgB,EAAyBhB,EAAzBgB,MAAOK,EAAkBrB,EAAlBqB,cAQf,OACE,0BAASnB,UAAU,OAAnB,UACE,qBAAKA,UAAU,YAAf,SACGc,EAAMM,OACHN,EAAMO,KAAI,SAAChB,GAAD,OAAU,cAAC,EAAD,CAAwBA,KAAMA,GAAfA,EAAKK,OACxC,gGAEN,wBAAQC,KAAK,SAASX,UAAU,oBAAoBa,QAd7B,WACzBM,EAAc,CACZG,QAAQ,EACRC,UAAW,aAWX,6G,sBCoHSC,G,MA9HD,SAAU1B,GAAQ,IAE5BwB,EACExB,EADFwB,OAF2B,EAGzBxB,EADMyB,iBAFmB,MAEP,UAFO,EAEIJ,EAC7BrB,EAD6BqB,cAFJ,EAGzBrB,EAD4C2B,uBAFnB,WAKuBC,mBAAS,CAC3DC,UAAU,EACVC,UAAU,IAPiB,mBAKtBC,EALsB,KAKFC,EALE,OASmBJ,mBAAS,CACvDK,eAAe,EACfC,eAAe,IAXY,mBAStBC,EATsB,KASJC,EATI,OAamBR,mBAAS,CACvDS,oBAAqB,EACrBC,mBAAoB,IAfO,mBAatBC,EAbsB,KAaJC,EAbI,OAiBmBZ,mBAAS,CACvDa,aAAa,IAlBc,mBAiBtBC,EAjBsB,KAiBJC,EAjBI,KAqBvBnC,EAAWC,qBAAWN,GA2CtByC,EAAe,SAACC,IAzCL,SAACA,GAChB,IAAgCC,IAMTD,EAAEE,OAAOC,QAAQC,YALtCT,GAAoB,SAACU,GAAD,mBAAC,eAChBA,GADe,IAElBb,oBAAqBc,OAAOL,QAIhC,IAAMM,EAAiB,WAAc,IAAD,uBAATC,EAAS,yBAATA,EAAS,oBAC3BC,EAAoBD,EADO,GAChBE,EAASF,EADO,GAElCrB,GAAsB,SAACkB,GAAD,mBAAC,eAClBA,GADiB,kBAEnBI,EAAYC,OAEfnB,GAAoB,SAACc,GAAD,mBAAC,eAChBA,GADe,4BAEdI,EAFc,UAEMC,QAG5B,OAAQV,EAAEE,OAAOS,MACf,IAAK,WACCX,EAAEE,OAAOQ,MAAMjC,QAAU,GAAK8B,EAAe,WAAYP,EAAEE,OAAOQ,OAClEV,EAAEE,OAAOQ,MAAMjC,OAAS,GAAK8B,EAAe,YAAY,GAC5D,MACF,IAAK,WACCP,EAAEE,OAAOQ,MAAMjC,QAAU,GAAK8B,EAAe,WAAYP,EAAEE,OAAOQ,OAClEV,EAAEE,OAAOQ,MAAMjC,OAAS,GAAK8B,EAAe,YAAY,IAgBhEK,CAASZ,IAGLa,EAAa,WACjBrC,EAAc,CAAEG,QAAQ,KAyB1B,OAdAmC,qBAAU,WACR,IAAIC,EAAc,EAClBC,OAAOC,OAAO/B,GAAoBgC,SAAQ,SAACC,GAAS,IAAoB,IAAhBC,QAAQD,GAAc,OAAOJ,GAAe,KACpGpB,GAAoB,SAACU,GAAD,mBAAC,eAChBA,GADe,IAElBZ,mBAAoBsB,SAErB,CAAC7B,IAEJ4B,qBAAU,WACR,IAAMO,EAAU3B,EAAiBD,qBAAuBC,EAAiBF,oBACzEM,EAAoB,CAAEF,YAAayB,MAClC,CAAC3B,IAGF,8BACE,qBAAKrC,UAAWsB,EAAS,QAAU,eAAgB2C,MAzC7B,WACxB,IAAKxC,EACH,MAAO,CACLyC,OAAQ,EACRC,gBAAiB,oBAqCuCC,GAAqBvD,QAAS,SAAC8B,GAAD,MAA8B,UAAvBA,EAAEE,OAAO7C,WAAyBwD,KAAjI,SAEiB,YAAdjC,GACD,sBAAKvB,UAAU,iBAAf,UACE,oBAAIA,UAAU,eAAd,yGACA,qBAAKA,UAAU,eAAea,QAAS,kBAAM2C,OAC7C,uBAAMxD,UAAU,cAAhB,UACE,mBAAGA,UAAU,0BAAb,uFACA,uBAAOsD,KAAK,WAAWe,mBAAiB,IAAIrE,UAAU,qBAAqBW,KAAK,OAAO2D,YAAY,uHAAwBC,SAAU,SAAC5B,GAAD,OAAOD,EAAaC,MACvJV,EAAiBF,cAAoF,mBAAG/B,UAAU,qBAAb,wIAApE,mBAAGA,UAAU,+CAAb,eACnC,mBAAGA,UAAU,0BAAb,uFACA,uBAAOsD,KAAK,WAAWe,mBAAiB,IAAIrE,UAAU,qBAAqBW,KAAK,OAAO2D,YAAY,sEAAeC,SAAU,SAAC5B,GAAD,OAAOD,EAAaC,MAC9IV,EAAiBD,cAAoF,mBAAGhC,UAAU,qBAAb,8FAApE,mBAAGA,UAAU,+CAAb,eACnC,wBAAQW,KAAK,SAASX,UAAWwC,EAAiBD,YAAc,2CAA6C,iEAAkEiC,UAAWhC,EAAiBD,YAAa1B,QArC3M,WACrBP,GAAS,SAAC0C,GAAD,4BACJA,GADI,CAEP,CAAEpC,KAAMiB,EAAmBF,SAAUV,KAAMY,EAAmBD,SAAUlB,GAAIsC,EAAKA,EAAK5B,OAAS,GAAGV,GAAK,QAEzG8C,KAgCQ,0ECpFGiB,MA5Bf,WAAgB,IAAD,EACavE,IAAMwB,SAASgD,KAAKC,MAAMC,aAAaC,QAAQ,WAD5D,mBACN/D,EADM,KACCR,EADD,OAEuBJ,IAAMwB,SAAS,CACjDJ,QAAQ,EACRC,UAAW,YAJA,mBAENuD,EAFM,KAEM3D,EAFN,KASb,OAFAyD,aAAaG,QAAQ,QAASL,KAAKM,UAAUlE,IAG3C,qCACE,cAAC,EAAD,CAAQf,SAAS,eACjB,eAAC,EAAakF,SAAd,CAAuB5B,MAAO/C,EAA9B,UACE,cAAC,EAAD,CACEQ,MAAOA,EACPK,cAAeA,IAEjB,cAAC,EAAD,CACEG,OAAQwD,EAAWxD,OACnBC,UAAWuD,EAAWvD,UACtBJ,cAAeA,EACfM,iBAAe,WCxBzByD,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.4222be83.chunk.js","sourcesContent":["import React from 'react';\r\nimport propTypes from 'prop-types';\r\nimport './header.css';\r\n\r\nconst Header = (props) => {\r\n  const { logoText } = props;\r\n  return (\r\n    <header>\r\n      <h1 className=\"header__logo-text\">{logoText}</h1>\r\n    </header>\r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  logoText: propTypes.string.isRequired,\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nconst TodosContext = React.createContext();\r\n\r\nexport default TodosContext;\r\n","/* eslint-disable jsx-a11y/click-events-have-key-events */\r\n/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\r\nimport React from 'react';\r\nimport propTypes from 'prop-types';\r\nimport './todo.css';\r\nimport TodoContext from '../../contexts/todos/TodosContext';\r\n\r\nconst TodoItem = (props) => {\r\n  const { todo } = props;\r\n  const setTodos = React.useContext(TodoContext);\r\n  const removeHandleClick = () => {\r\n    setTodos((todos) => todos.filter((t) => t.text !== todo.text));\r\n  };\r\n\r\n  return (\r\n    <label className=\"todo-list__item\" htmlFor={todo.id}>\r\n      <input type=\"checkbox\" id={todo.id} className=\"todo-list__checkbox\" />\r\n      <span className=\"todo-list__description\">{todo.text}</span>\r\n      <p className=\"todo-list__remove-btn\" onClick={removeHandleClick}>Удалить заметку</p>\r\n      <span className=\"todo-list__description_time\">{todo.date}</span>\r\n    </label>\r\n  );\r\n};\r\n\r\nTodoItem.propTypes = {\r\n  todo: propTypes.shape({\r\n    date: propTypes.string.isRequired,\r\n    id: propTypes.string.isRequired,\r\n    text: propTypes.string.isRequired,\r\n  }).isRequired,\r\n};\r\n\r\nexport default TodoItem;\r\n","import React from 'react';\r\nimport propTypes from 'prop-types';\r\nimport './todo.css';\r\nimport TodoItem from './TodoItem';\r\n\r\nconst Todo = (props) => {\r\n  const { todos, setPopupState } = props;\r\n  const addTodoHandleClick = () => {\r\n    setPopupState({\r\n      isOpen: true,\r\n      popupName: 'addTodo',\r\n    });\r\n  };\r\n\r\n  return (\r\n    <section className=\"todo\">\r\n      <div className=\"todo-list\">\r\n        {todos.length\r\n          ? todos.map((todo) => <TodoItem key={todo.id} todo={todo} />)\r\n          : <p>Нет заметок</p>}\r\n      </div>\r\n      <button type=\"button\" className=\"todo-list__button\" onClick={addTodoHandleClick}>Добавить заметку</button>\r\n    </section>\r\n  );\r\n};\r\n\r\nTodo.propTypes = {\r\n  todos: propTypes.arrayOf(propTypes.object).isRequired,\r\n  setPopupState: propTypes.func.isRequired,\r\n};\r\n\r\nexport default Todo;\r\n","/* eslint-disable func-names */\r\n/* eslint-disable consistent-return */\r\n/* eslint-disable max-len */\r\n/* eslint-disable no-return-assign */\r\n/* eslint-disable jsx-a11y/click-events-have-key-events */\r\n/* eslint-disable jsx-a11y/no-static-element-interactions */\r\nimport React, { useEffect, useState, useContext } from 'react';\r\nimport './popup.css';\r\nimport propTypes from 'prop-types';\r\nimport TodosContext from '../../contexts/todos/TodosContext';\r\n\r\nconst Popup = function (props) {\r\n  const {\r\n    isOpen, popupName = 'addTodo', setPopupState, blockBackground = true,\r\n  } = props;\r\n\r\n  const [successValidFields, setSuccessValidFields] = useState({\r\n    todoText: false,\r\n    todoDate: false,\r\n  });\r\n  const [inputErrorsState, setInputErrorsState] = useState({\r\n    todoTextError: false,\r\n    todoDateError: false,\r\n  });\r\n  const [countsInputsInfo, setCountsInputsInfo] = useState({\r\n    requiredInputsCount: 2,\r\n    successInputsCount: 0,\r\n  });\r\n  const [entryButtonState, setEntryButtonState] = useState({\r\n    entryButton: false,\r\n  });\r\n\r\n  const setTodos = useContext(TodosContext);\r\n\r\n  const validate = (e) => {\r\n    const setRequiredInputsCount = (requiredCount) => {\r\n      setCountsInputsInfo((prev) => ({\r\n        ...prev,\r\n        requiredInputsCount: Number(requiredCount),\r\n      }));\r\n    };\r\n    setRequiredInputsCount(e.target.dataset.inputscount);\r\n    const setValidFields = (...data) => {\r\n      const [fieldName, value] = data;\r\n      setSuccessValidFields((prev) => ({\r\n        ...prev,\r\n        [fieldName]: value,\r\n      }));\r\n      setInputErrorsState((prev) => ({\r\n        ...prev,\r\n        [`${fieldName}Error`]: !value,\r\n      }));\r\n    };\r\n    switch (e.target.name) {\r\n      case 'todoText':\r\n        if (e.target.value.length >= 5) { setValidFields('todoText', e.target.value); }\r\n        if (e.target.value.length < 5) { setValidFields('todoText', false); }\r\n        break;\r\n      case 'todoDate':\r\n        if (e.target.value.length >= 5) { setValidFields('todoDate', e.target.value); }\r\n        if (e.target.value.length < 5) { setValidFields('todoDate', false); }\r\n        break;\r\n      default:\r\n    }\r\n  };\r\n\r\n  const backgroundHandler = () => {\r\n    if (!blockBackground) {\r\n      return {\r\n        zIndex: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0)',\r\n      };\r\n    }\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    validate(e);\r\n  };\r\n\r\n  const closePopup = () => {\r\n    setPopupState({ isOpen: false });\r\n  };\r\n\r\n  const addTodoHandler = () => {\r\n    setTodos((prev) => [\r\n      ...prev,\r\n      { text: successValidFields.todoText, date: successValidFields.todoDate, id: prev[prev.length - 1].id + 1 },\r\n    ]);\r\n    closePopup();\r\n  };\r\n\r\n  useEffect(() => {\r\n    let succesCount = 0;\r\n    Object.values(successValidFields).forEach((el) => { if (Boolean(el) === true) return succesCount += 1; });\r\n    setCountsInputsInfo((prev) => ({\r\n      ...prev,\r\n      successInputsCount: succesCount,\r\n    }));\r\n  }, [successValidFields]);\r\n\r\n  useEffect(() => {\r\n    const isValid = countsInputsInfo.successInputsCount === countsInputsInfo.requiredInputsCount;\r\n    setEntryButtonState({ entryButton: isValid });\r\n  }, [countsInputsInfo]);\r\n\r\n  return (\r\n    <div>\r\n      <div className={isOpen ? 'popup' : 'popup_hidden'} style={backgroundHandler()} onClick={(e) => e.target.className === 'popup' && closePopup()}>\r\n\r\n        {popupName === 'addTodo' && (\r\n        <div className=\"popup__content\">\r\n          <h2 className=\"popup__title\">Добавить заметку</h2>\r\n          <div className=\"popup__close\" onClick={() => closePopup()} />\r\n          <form className=\"popup__form\">\r\n            <p className=\"popup__input-descriptor\">Текст заметки</p>\r\n            <input name=\"todoText\" data-inputscount=\"2\" className=\"input popup__input\" type=\"text\" placeholder=\"Введите текст заметки\" onChange={(e) => handleChange(e)} />\r\n            {!inputErrorsState.todoTextError ? <p className=\"popup__input-error popup__input-error_hidden\"> </p> : <p className=\"popup__input-error\">Слишком короткий текст</p>}\r\n            <p className=\"popup__input-descriptor\">Текст заметки</p>\r\n            <input name=\"todoDate\" data-inputscount=\"2\" className=\"input popup__input\" type=\"text\" placeholder=\"Введите дату\" onChange={(e) => handleChange(e)} />\r\n            {!inputErrorsState.todoDateError ? <p className=\"popup__input-error popup__input-error_hidden\"> </p> : <p className=\"popup__input-error\">Не выбрана дата</p>}\r\n            <button type=\"button\" className={entryButtonState.entryButton ? 'button popup__button popup__button_entry' : 'button popup__button popup__button_disable popup__button_entry'} disabled={!entryButtonState.entryButton} onClick={addTodoHandler}>Добавить</button>\r\n          </form>\r\n        </div>\r\n        )}\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nPopup.propTypes = {\r\n  isOpen: propTypes.bool.isRequired,\r\n  popupName: propTypes.string.isRequired,\r\n  setPopupState: propTypes.func.isRequired,\r\n  blockBackground: propTypes.bool.isRequired,\r\n};\r\n\r\nexport default Popup;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport Header from './components/header/Header';\r\nimport Todo from './components/todo/Todo';\r\n// import Todos from './todos.json';\r\nimport TodosContext from './contexts/todos/TodosContext';\r\nimport Popup from './components/popup/Popup';\r\n// JSON.parse(localStorage.getItem('todos'))\r\nfunction App() {\r\n  const [todos, setTodos] = React.useState(JSON.parse(localStorage.getItem('todos')));\r\n  const [popupState, setPopupState] = React.useState({\r\n    isOpen: false,\r\n    popupName: 'addTodo',\r\n  });\r\n\r\n  localStorage.setItem('todos', JSON.stringify(todos));\r\n\r\n  return (\r\n    <>\r\n      <Header logoText=\"Todos list\" />\r\n      <TodosContext.Provider value={setTodos}>\r\n        <Todo\r\n          todos={todos}\r\n          setPopupState={setPopupState}\r\n        />\r\n        <Popup\r\n          isOpen={popupState.isOpen}\r\n          popupName={popupState.popupName}\r\n          setPopupState={setPopupState}\r\n          blockBackground\r\n        />\r\n      </TodosContext.Provider>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}